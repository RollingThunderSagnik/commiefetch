#!/usr/bin/env bash

XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-${HOME}/.config}

# Get user
user="${USER-$(id -u -n)}"

# Get host
host="$(uname -n)"

hammer_sickle()
{
ART1="${c1}${bold}${bold}             .\,       "
ART2="${c1}${bold}${bold}              +\*:     "
ART3="${c1}${bold}${bold}       ,+S##?  :#@+    "
ART4="${c1}${bold}${bold}     ,+S@@@%,   :@@+   "
ART5="${c1}${bold}${bold}     ,%@#S@@S\   %@#,  "
ART6="${c1}${bold}${bold}       *  \S@@%\ %@#,  "
ART7="${c1}${bold}${bold}    /@,     \S@@%@@*   "
ART8="${c1}${bold}${bold}  ,/@%@%+:,,,:%@@@#    "
ART9="${c1}${bold}${bold} ,/@%/+S@@@@@@@@%#@&\  "
ART0="${c1}${bold}${bold}  //      ''''   \%&&} "
ARTz="${c1}${bold}${bold}                       "
}

trot()
{
ART1="${c1}${bold}${bold}       ,/,             "
ART2="${c1}${bold}${bold}     :*/+              "
ART3="${c1}${bold}${bold}    +@#:${c0}${bold}${bold}///${c1}${bold}${bold}##S+,       "
ART4="${c1}${bold}${bold}   +@@:${c0}${bold}${bold}///${c1}${bold}${bold},%@@@S+,     "
ART5="${c1}${bold}${bold}  ,#@%${c0}${bold}${bold}///${c1}${bold}${bold}/S@@S#@%,     "
ART6="${c1}${bold}${bold}  ,#@${c0}${bold}${bold}///${c1}${bold}${bold}%@@S/${c0}${bold}${bold}///${c1}${bold}${bold}       "
ART7="${c1}${bold}${bold}   *${c0}${bold}${bold}///////////${c1}${bold}${bold} ,@\    "
ART8="${c1}${bold}${bold}   {#@@@%:,${c0}${bold}${bold}///${c1}${bold}${bold}+%@%@\,  "
ART9="${c1}${bold}${bold}   &@#%@@@${c0}${bold}${bold}///${c1}${bold}${bold}@@S+\%@\, "
ART0="${c1}${bold}${bold}  {&&'   ${c0}${bold}${bold}///${c1}${bold}${bold}'      \\\  "
ARTz="${c1}${bold}${bold}                       "
}

anA()
{
ART1="${c1}${bold}${bold}      ,;*aAAAAAa*;,      "
ART2="${c1}${bold}${bold}   .aAAAAaAAAAAaAAAAa.   "
ART3="${c1}${bold}${bold}  aAAa.  aAA!AA;  .aAAa  "
ART4="${c1}${bold}${bold} aAA.   aAAa aAAa   .AAa "
ART5="${c1}${bold}${bold}:AAa  .aAAa. .aAAa.  aAA:"
ART6="${c1}${bold}${bold}:AAa .aAAAAAAAAAAAa. aAA:"
ART7="${c1}${bold}${bold} aAAaAAa         aAAaAAa "
ART8="${c1}${bold}${bold}  aAAAA.         .AAAA+  "
ART9="${c1}${bold}${bold}   *aAAAAAa,,,aAAAAAa*   "
ART0="${c1}${bold}${bold}      '^*aAAAAAa*^'      "
ARTz="${c1}${bold}${bold}                         "
}

leftist_unity()
{
ART1="${c1}      ,;${c1}${bold},/,${normal}${c1}AAAAa*;,      ${bold}"
ART2="${normal}${c1}   .aA${c1}${bold}:*/+${normal}${c1}AAAAAaAAAAa.   ${bold}"
ART3="${normal}${c1}  aAA${c1}${bold}+@#:${c0}${bold}///${c1}${bold}##S+,${normal}${c1} .aAAa  "
ART4="${normal}${c1} aAA${c1}${bold}+@@:${c0}${bold}///${c1}${bold},%@@@S+,${normal}${c1} .AAa "
ART5="${c1}:AA${c1}${bold},#@%${c0}${bold}///${c1}${bold}/S@@S#@%,${normal}${c1}  aAA:"
ART6="${c1}:AA${c1}${bold},#@${c0}${bold}///${c1}${bold}%@@S/${c0}${bold}///${normal}${c1}Aa. aAA:"
ART7="${c1} aAA${c1}${bold}*${c0}${bold}///////////${c1}${bold} ${c1}${bold},@\ ${normal}${c1}aAAa "
ART8="${c1}  aA${c1}${bold}{#@@@%:,${c0}${bold}///${c1}${bold}+%@%@\,${normal}${c1}+  "
ART9="${c1}   *${c1}${bold}&@#%@@@${c0}${bold}///${c1}${bold}@@S+\%@\,  "
ART0="${c1}   ${c1}${bold}{&&'${normal}${c1}^*a${c0}${bold}///${c1}${bold}'${normal}${c1}Aa*^' ${c1}${bold}\\\   "
ARTz="${c1}${bold}                         "
}
get_underline() {
    length=${#host}
    printf -v underline "%${length}s"
    printf -v bar '%b%b' \
    "${underline// /"-"}"
}

print_help(){
    get_underline
    cat <<-EOF
${bold}commiefetch v0.0.1

USAGE
${normal}commiefetch [-h] [-c] [-nm] command...

${bold}CHAINABLE FLAGS${normal}
-nm, --no-music     Disable music

${bold}COMMANDS${normal}
-c, --config        Generate config

-h, --help          Display this guide
EOF
}

print_info(){

    get_underline

    case $stance in
        "1") 
        hammer_sickle
        stance='Marxist-Leninist';;
        "2") 
        hammer_sickle
        stance='Marxist-Leninist-Maoist';;
        "3") 
        trot
        stance="Trotskyist";;
        "4") 
        anA
        stance="Anarcho-Communist";;
        "5") 
        leftist_unity
        stance="Leftist Unity";;
    esac

    case $language in
        "1") 
        language='Russian';;
        "2") 
        language='Bengali';;
        "3") 
        language="Hindi/Urdu";;
        "4") 
        language="German";;
        "5") 
        language="French";;
        "6") 
        language="Chinese";;
    esac
    # foo=$((1 + $RANDOM % 10))
    cat <<-EOF
 ${ART1}    ${host}
 ${ART2}    ${bar}
 ${ART3}    ${c1}${bold}comrade    ${c0}${user}
 ${ART4}    ${c1}${bold}stance     ${normal}${stance}
 ${ART5}    ${c1}${bold}language   ${normal}${language}
 ${ART6}    
 ${ART7}    
 ${ART8}    ${c1}${bold}${sovdiff} ${normal}days since USSR broke
 ${ART9}    ${bezos} 
 ${ART0}    
 ${ARTz}    ${c1}â–ˆâ–ˆâ–ˆ${c5}â–ˆâ–ˆâ–ˆ${c4}â–ˆâ–ˆâ–ˆ${c3}â–ˆâ–ˆâ–ˆ${c2}â–ˆâ–ˆâ–ˆ
EOF
}

music(){
if [[ play_music -eq 1 ]]; then
    case $language in
        "1") 
        xdg-open https://youtu.be/t8EMx7Y16Vo &>/dev/null;;
        "2") 
        xdg-open https://youtu.be/dvtNyCtVmNk &>/dev/null;;
        "3") 
        xdg-open https://youtu.be/RIRauszSIAg &>/dev/null;;
        "4") 
        xdg-open https://youtu.be/bzcAeZpVI1Q &>/dev/null;;
        "5") 
        xdg-open https://youtu.be/cKSjkklFzyU &>/dev/null;;
        "6") 
        xdg-open https://youtu.be/X9pGTOlhRvs &>/dev/null;;
    esac
fi
}




read -rd '' config <<'EOF'
stance=marxist
language=russian
EOF

color() {
    case $1 in
        [0-6])    printf '%b\e[3%sm'   "$reset" "$1" ;;
        7 | "fg") printf '\e[37m%b'    "$reset" ;;
        *)        printf '\e[38;5;%bm' "$1" ;;
    esac
}

err() {
    err+="$(color 1)[!]${reset} $1
"
}

make_config(){
    clear
        cat <<- EOF
${c5}[${c4}1${c5}]${c0} Marxist-Leninist
${c5}[${c4}2${c5}]${c0} Marxist-Leninist-Maoist
${c5}[${c4}3${c5}]${c0} Trotskyist
${c5}[${c4}4${c5}]${c0} Anarcho-Communist
${c5}[${c4}5${c5}]${c0} Leftist Unity
EOF
    printf "\nChoose your stance: "
    read -n 1 -r stance
    while [[ ! $stance =~ ^[0-9]+$ ]] ; do
        printf "Please enter a number: " 
        read -n 1 -r stance
    done

    clear
    cat <<- EOF
${c5}[${c4}1${c5}]${c0} Russian
${c5}[${c4}2${c5}]${c0} Bengali
${c5}[${c4}3${c5}]${c0} Hindi/Urdu
${c5}[${c4}4${c5}]${c0} German
${c5}[${c4}5${c5}]${c0} French
${c5}[${c4}6${c5}]${c0} Chinese
EOF
    printf "\nChoose your language: "
    read -n 1 -r language
    while [[ ! $language =~ ^[0-9]+$ ]] ; do
        printf "Please enter a number: " 
        read -n 1 -r language
    done
    read -rd '' config <<EOF
stance=${stance}
language=${language}
EOF
clear
        config_file="${XDG_CONFIG_HOME}/commiefetch/config.conf"

        # The config file doesn't exist, create it.
        mkdir -p "${XDG_CONFIG_HOME}/commiefetch/"
        # cp commiefetch.py ${XDG_CONFIG_HOME}/commiefetch/
        printf '%s\n' "$config" > "$config_file"


}

get_user_config() {
    # -config /path/to/config.conf
    if [[ -f "$config_file" ]]; then
        source "$config_file"
        err "Config: Sourced user config. (${config_file})"
        return

    elif [[ -f "${XDG_CONFIG_HOME}/commiefetch/config.conf" ]]; then
        source "${XDG_CONFIG_HOME}/commiefetch/config.conf"
        err "Config: Sourced user config.    (${XDG_CONFIG_HOME}/commiefetch/config.conf)"

    elif [[ -f "${XDG_CONFIG_HOME}/commiefetch/config" ]]; then
        source "${XDG_CONFIG_HOME}/commiefetch/config"
        err "Config: Sourced user config.    (${XDG_CONFIG_HOME}/commiefetch/config)"

    elif [[ -z "$no_config" ]]; then
        cat <<- EOF
No config file found.
Run commiefetch -config or commiefetch -c to generate one.
EOF
        exit 2
    fi
}

get_args() {
    play_music=1
    # Check the commandline flags early for '-config'.
    [[ "$*" != *-config* && "$*" != *-c* ]] && get_user_config
    while [[ "$1" ]]; do
            case $1 in
                # Info                
                "-c"|"--config") 
                    make_config
                    exit ;;
                "-nm" | "--no-music") 
                    play_music=0 ;;
                "-h" | "--help") 
                    print_help
                    exit ;;
            esac

        shift
    done
}


# Colors and palette method stolen from dylanaraps pftech: https://github.com/dylanaraps/pfetch
get_colors(){
    c0='[0m'
    c1='[31m'; c2='[32m'
    c3='[33m'; c4='[34m'
    c5='[35m'; c6='[36m'
    c7='[37m'; c8='[38m'
    c9='^[[37m'

    palette="[7m$c1 $c1 $c2 $c2 $c3 $c3 $c4 $c4 $c1 $c1 $c6 $c6 [m"


    bold=$(tput bold)
    normal=$(tput sgr0)
}

get_info()
{
    bezos=$(commiefetchpy -f '{bezos} ')
    bezos="${c1}${bold}${bold}${bezos}${normal}is Jeff Bezos' net worth"
    sovdiff=$(( ($(date +%s) - $(date -d "1991-12-25 UTC" +%s)) / (60*60*24) ))
}


main(){
    
    eval "$config"

    

    # PREFIX?=/usr
    # BIN?=$(PREFIX)/bin

    # echo "${BIN}"

    get_colors
    get_args "$@"
    get_info
    music
    print_info

}

main "$@"

